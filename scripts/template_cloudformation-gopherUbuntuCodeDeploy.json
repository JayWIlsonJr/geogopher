{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "AWS CodeDeploy infra",
  "Parameters" : {
    "VPCID": {
      "Description" : "VPC ID",
      "Type": "String",
      "Default": "vpc-78bc0a00"
    },

    "myIP": {
      "Description" : "Enter your IP address in CIDR notation, e.g. 100.150.200.225/32",
      "Type": "String",
      "Default": "24.191.42.63/32"
    },

    "InstanceProfile": {
      "Description" : "Use the full ARN for SimpleCodeDeployInstanceProfile or AdvancedCodeDeployInstanceProfile",
      "Type": "String",
      "Default": "arn:aws:iam::202598562456:instance-profile/gopherSimpleCodeDeployInstanceProfile"
    },

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "The name of an existing EC2 KeyPair.",
      "Default": "gopher-key"
    },
    "AZ"  : {
      "Description" : "Comma delimited list of AvailabilityZones where the instances will be created",
      "Type"        : "CommaDelimitedList",
      "Default": "us-east-1f,us-east-1e,us-east-1d"
    },

    "PublicSubnets"  : {
      "Description" : "Comma delimited list of public subnets",
      "Type"        : "CommaDelimitedList",
      "Default": "subnet-db97aed7,subnet-634ce55c,subnet-b107f1ec"
    },

    "InstanceType" : {
      "Description" : "Provide InstanceType to be used",
      "Type" : "String",
      "ConstraintDescription" : "Must be a valid EC2 instance type, such as t2.medium",
      "Default": "t2.micro"
    },

    "LinuxAMIID" : {
      "Description" : "Gopher Ubuntu AMI ID",
      "Type" : "String",
      "Default": "ami-c5cd4bbf"
    }
  },
  "Resources" : {
  "WebSecurityGroup": {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties": {
      "GroupDescription": "WebSecurityGroup",
      "SecurityGroupEgress": [
        {
          "CidrIp": "0.0.0.0/0",
          "FromPort": -1,
          "IpProtocol": "-1",
          "ToPort": -1
        }
      ],
      "SecurityGroupIngress": [
        {
          "CidrIp": "0.0.0.0/0",
          "FromPort": 80,
          "IpProtocol": "6",
          "ToPort": 80
        },
        {
          "CidrIp": {
            "Ref": "myIP"
          },
          "IpProtocol": "-1"
        }
      ],
      "VpcId": {
        "Ref": "VPCID"
      }
    }
    },
    "LinuxWebSNSTopic" : {
      "Type" : "AWS::SNS::Topic"
    },
    "LinuxWebASG" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Ref" : "AZ" },
        "VPCZoneIdentifier" : { "Ref": "PublicSubnets" },
        "MinSize" : "2",
        "MaxSize" : "4",
        "HealthCheckType" : "ELB",
        "HealthCheckGracePeriod" : "600",
        "NotificationConfiguration" : {
          "TopicARN" : { "Ref" : "LinuxWebSNSTopic" },
          "NotificationTypes" : [
            "autoscaling:EC2_INSTANCE_LAUNCH",
            "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
            "autoscaling:EC2_INSTANCE_TERMINATE",
            "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
          ]
      },
      "LoadBalancerNames" : [ { "Ref" : "LinuxWebELB" } ],
      "DesiredCapacity" : "2",
      "LaunchConfigurationName" : { "Ref" : "LinuxWebLaunchConfig" },
      "Tags" : [
        {"Key" : "Name", "Value" : "LinuxWebServer", "PropagateAtLaunch" : "true" }
      ]
     }
    },
    "LinuxWebLaunchConfig": {
      "Properties": {
        "AssociatePublicIpAddress" : "true",
        "ImageId": { "Ref": "LinuxAMIID" },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups": [ { "Ref": "WebSecurityGroup" } ],
        "IamInstanceProfile": { "Ref": "InstanceProfile" },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n\n",
                "apt-get -y update\n\n",
                "apt-get -y install nodejs\n\n",
                "update-alternatives --install /usr/bin/node node /usr/bin/nodejs \n\n",
                "curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -",
                "apt-get -y install ruby\n\n",
                "apt-get -y install wget\n\n",
                "apt-get -y install nginx\n\n",
                "cd /home/ubuntu\n\n",
                "rm -f install*\n\n",
                "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install\n\n",
                "chmod +x ./install\n\n",
                "./install auto\n\n",
                "echo 'hello world' > /var/www/html/index.html\n\n",
                "hostname >> /var/www/html/index.html\n\n",
                "service nginx restart\n\n",
                "cd /home/ubuntu/geogopher\n\n",
                "apt-get -y install nodejs\n\n",
                "npm install\n\n",
                "npm run build\n\n",
                "chown -R ubuntu:ubuntu /home/ubuntu/geogopher\n\n",
                "npm start\n\n"
              ]
            ]
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    },

    "LinuxWebAutoscaleUpPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "LinuxWebASG" },
        "Cooldown" : "300",
        "ScalingAdjustment" : "1"
      }
    },
    "LinuxWebAutoscaleDownPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "LinuxWebASG" },
        "Cooldown" : "300",
        "ScalingAdjustment" : "-1"
      }
    },
    "LinuxWebCloudWatchCPUAlarmHigh" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "SNS Notification and scale up if CPU Util is Higher than 90% for 10 mins",
        "MetricName" : "CPUUtilization",
        "Namespace" : "AWS/EC2",
        "Statistic" : "Average",
        "Period" : "300",
        "EvaluationPeriods" : "2",
        "Threshold" : "90",
        "AlarmActions" : [ { "Ref": "LinuxWebAutoscaleUpPolicy" }, { "Ref" : "LinuxWebSNSTopic" } ],
        "Dimensions" : [
          {
            "Name" : "AutoScalingGroupName",
            "Value" : { "Ref" : "LinuxWebASG" }
          }
        ],
        "ComparisonOperator" : "GreaterThanThreshold"
      }
    },
    "LinuxWebCloudWatchCPUAlarmLow" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "SNS Notification and scale down if CPU Util is less than 70% for 10 mins",
        "MetricName" : "CPUUtilization",
        "Namespace" : "AWS/EC2",
        "Statistic" : "Average",
        "Period" : "300",
        "EvaluationPeriods" : "2",
        "Threshold" : "70",
        "AlarmActions" : [ { "Ref": "LinuxWebAutoscaleDownPolicy" }, { "Ref" : "LinuxWebSNSTopic" } ],
        "Dimensions" : [
          {
            "Name" : "AutoScalingGroupName",
            "Value" : { "Ref" : "LinuxWebASG" }
          }
        ],
        "ComparisonOperator" : "LessThanThreshold"
      }
    },

    "LinuxWebELB" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "CrossZone" : true,
        "ConnectionDrainingPolicy": {
          "Enabled" : "true",
          "Timeout" : "60"
        },
        "HealthCheck" :  {
          "Target" : "HTTP:80/index.html",
          "HealthyThreshold" : "9",
          "UnhealthyThreshold" : "3",
          "Interval" : "15",
          "Timeout" : "5"
        },
        "LoadBalancerName" :  "LinuxWebELB",
        "Scheme" : "internet-facing",
        "Listeners" : [
        {
          "LoadBalancerPort" : "80",
          "InstancePort" : "80",
          "InstanceProtocol" : "HTTP",
          "Protocol" :  "HTTP"
        }

         ],
        "SecurityGroups": [ { "Ref": "WebSecurityGroup" } ],
        "Subnets" : { "Ref": "PublicSubnets" },
        "Tags" : [{"Key" : "Network", "Value" : "public"}]
      }
    }
  },
  "Outputs" : {
    "LinuxWebFQDN" : { "Value": { "Fn::GetAtt" : [ "LinuxWebELB", "DNSName" ]} }
  }
}
